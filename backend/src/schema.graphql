scalar DateTime

type SuccessMessage {
  message: String
}

type AuthPayload {
  token: String!
  user: User!
}

type Query {
  me: User
}

type User {
  id: ID!
  email: String!
  password: String!
  name: String
  affirmations: [Affirmation]!
}

type Affirmation {
  id: ID!
  text: String!
}

type Mutation {
  signup(email: String!, password: String!, name: String): AuthPayload!
  signin(email: String!, password: String!): AuthPayload!
  signout: SuccessMessage
  createAffirmation(text: String!): Affirmation
  deleteAffirmation(id: ID): Affirmation
}
